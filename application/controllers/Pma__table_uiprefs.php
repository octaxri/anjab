<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Pma__table_uiprefs extends CI_Controller
{
    function __construct()
    {
        parent::__construct();

        $this->load->model('Pma__table_uiprefs_model');
        $this->load->library('form_validation');

        if(!$this->session->userdata('logined') || $this->session->userdata('logined') != true)
        {
            redirect('/');
        }        
	$this->load->library('datatables');
    }

    public function index()
    {
        $this->load->view('pma__table_uiprefs/pma__table_uiprefs_list');
    } 
    
    public function json() {
        header('Content-Type: application/json');
        echo $this->Pma__table_uiprefs_model->json();
    }

    public function read($id) 
    {
        $row = $this->Pma__table_uiprefs_model->get_by_id($id);
        if ($row) {
            $data = array(
		'username' => $row->username,
		'db_name' => $row->db_name,
		'table_name' => $row->table_name,
		'prefs' => $row->prefs,
		'last_update' => $row->last_update,
	    );
            $this->load->view('pma__table_uiprefs/pma__table_uiprefs_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('pma__table_uiprefs'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('pma__table_uiprefs/create_action'),
	    'username' => set_value('username'),
	    'db_name' => set_value('db_name'),
	    'table_name' => set_value('table_name'),
	    'prefs' => set_value('prefs'),
	    'last_update' => set_value('last_update'),
	);
        $this->load->view('pma__table_uiprefs/pma__table_uiprefs_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'prefs' => $this->input->post('prefs',TRUE),
		'last_update' => $this->input->post('last_update',TRUE),
	    );

            $this->Pma__table_uiprefs_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('pma__table_uiprefs'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Pma__table_uiprefs_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('pma__table_uiprefs/update_action'),
		'username' => set_value('username', $row->username),
		'db_name' => set_value('db_name', $row->db_name),
		'table_name' => set_value('table_name', $row->table_name),
		'prefs' => set_value('prefs', $row->prefs),
		'last_update' => set_value('last_update', $row->last_update),
	    );
            $this->load->view('pma__table_uiprefs/pma__table_uiprefs_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('pma__table_uiprefs'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('username', TRUE));
        } else {
            $data = array(
		'prefs' => $this->input->post('prefs',TRUE),
		'last_update' => $this->input->post('last_update',TRUE),
	    );

            $this->Pma__table_uiprefs_model->update($this->input->post('username', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('pma__table_uiprefs'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Pma__table_uiprefs_model->get_by_id($id);

        if ($row) {
            $this->Pma__table_uiprefs_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('pma__table_uiprefs'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('pma__table_uiprefs'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('prefs', 'prefs', 'trim|required');
	$this->form_validation->set_rules('last_update', 'last update', 'trim|required');

	$this->form_validation->set_rules('username', 'username', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Pma__table_uiprefs.php */
/* Location: ./application/controllers/Pma__table_uiprefs.php */
/* Please DO NOT modify this information : */
/* Generated by mahrus@pcr.ac.id*/
